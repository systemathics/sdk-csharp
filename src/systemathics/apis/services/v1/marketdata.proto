syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "systemathics/apis/type/v1/constraints.proto";
import "systemathics/apis/type/v1/memo.proto";

package systemathics.apis.services.v1;

service MarketDataService 
{
    rpc MarketData1(MarketData1Request) returns (stream MarketData1Response);
    rpc MarketDataN(MarketDataNRequest) returns (stream MarketDataNResponse);
}

message MarketData1Request 
{
    systemathics.apis.type.v1.Memo memo = 1;
    systemathics.apis.type.v1.Constraints constraints = 2; // Transports the IConstraints semantics
}

message MarketDataNRequest
{
    repeated systemathics.apis.type.v1.Memo memos = 1;
    systemathics.apis.type.v1.Constraints constraints = 2; // Transports the IConstraints semantics
}

message MarketData1Response 
{
    uint32 event_source = 1;
    google.protobuf.Timestamp time_stamp = 2;
    oneof payload 
    {
        MarketFieldsUpdates fields_updates = 3;
        MarketBookUpdates book_updates = 4;
        Codecs codecs = 5;
        Mappings mappings = 6;
    }
}

message MarketDataNResponse 
{
    uint32 event_source = 1;
    google.protobuf.Timestamp time_stamp = 2;
    oneof payload 
    {
        MarketFieldsUpdates fields_updates = 3;
        MarketBookUpdates book_updates = 4;
        Codecs codecs = 5;
        Mappings mappings = 6;
    }
}

message Codecs
{
    repeated Codec table = 1;
}

message Codec
{
    uint32 payload_type = 1;
    string payload_type_specification = 2;
    string codec_type_specification = 3;
}

message Mapping
{
    uint32 event_source = 1;
    string id = 2; // Guid
    systemathics.apis.type.v1.Memo memo = 3;
}

message Mappings
{
    repeated Mapping table = 1;
}

message MarketFieldsUpdates
{
    bool is_snapshot = 1;
    repeated MarketFieldUpdate updates = 2;
}

message MarketFieldUpdate
{
    Action action = 1;
    Field field = 2;
    oneof value 
    {
        int64 long_value = 3;
        double double_value = 4;
        string string_value = 5;
    }
}

message MarketBookUpdates
{
    bool is_snapshot = 1;
    repeated MarketBookUpdate updates = 2;
}

message MarketBookUpdate
{
    Action action = 1;
    Side side = 2;
    uint32 depth = 3;
    google.protobuf.Int64Value size = 4;
    google.protobuf.DoubleValue price = 5;
}

enum Side
{
    SIDE_UNSPECIFIED = 0;
    SIDE_BID = 1;
    SIDE_ASK = 2;
}

enum Action
{
    ACTION_UNSPECIFIED =0;
    ACTION_SET = 1;
    ACTION_CLEAR = 2;
}

enum Field
{
    FIELD_UNSPECIFIED = 0;
    FIELD_OPEN_PRICE = 1;
    FIELD_OPEN_SIZE = 2;
    FIELD_CLOSE_PRICE = 3;
    FIELD_CLOSE_SIZE = 4;
    FIELD_LOW_PRICE = 5;
    FIELD_LOW_SIZE = 6;
    FIELD_HIGH_PRICE = 7;
    FIELD_HIGH_SIZE = 8;
    FIELD_TRADE_PRICE = 9;
    FIELD_TRADE_SIZE = 10;
    FIELD_TRADING_CONDITION = 11;
    FIELD_TRADE_COUNT = 12;
    FIELD_TRADE_OTC_PRICE = 13;
    FIELD_TRADE_OTC_SIZE = 14;
    FIELD_TRADE_OTC_COUNT = 15;
    FIELD_VOLUME = 16;
    FIELD_VWAP_OFFICIAL = 17;
    FIELD_VWAP_ELECTRONIC = 18;
    FIELD_THEORETICAL_PRICE = 19;
    FIELD_THEORETICAL_SIZE = 20;
    FIELD_UPPER_PRICE = 21;
    FIELD_LOWER_PRICE = 22;
    FIELD_VARIATION = 23;
    FIELD_VARIATION_PERCENTAGE = 24;
}
